public abstract string Test(NodeTest test)
        {
            try
            {

                switch (test.TestType)
                {
                    case TestType.Count:
                        var actual = linkedListCount(test.Count, test.Pops);
                        if (actual == test.ExpectedCount)
                            return "Valid";
                        else
                            return "Invalid";
                    case TestType.AddFirst:
                        actual = AddFirstTest(test.Count, test.Value);
                        if (actual == test.ExpectedValue)
                            return "Valid";
                        else
                            return "Invalid";
                    case TestType.FindNode:
                        actual = FindNodeTest(test.Count, test.Value);
                        if (actual == test.ExpectedValue)
                            return "Valid";
                        else
                            return "Invalid";
                    case TestType.AddNodeAfter:
                        actual = AddNodeAfterTest(test.Count, test.Index, test.Value);
                        if (actual == test.Value)
                            return "Valid";
                        else
                            return "Invalid";
                    case TestType.RemoveNode:
                        actual = RemoveNodeTest(test.Count, test.Index);
                        if (actual == test.ExpectedIndex)
                            return "Valid";
                        else
                            return "Invalid";
                    default:
                        return "Test Type not defined";
                }

            }
            catch (Exception ex)
            {
                if (test.ExpectedException != null)
                    return "Valid Ex";
                else
                    return "Invalid Ex";
            }
        }